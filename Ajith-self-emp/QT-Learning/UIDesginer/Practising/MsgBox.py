# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'MsgBox.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
# this function works well for the message boxes and messages



from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.MessageBox = QtWidgets.QPushButton(self.centralwidget)
        self.MessageBox.setGeometry(QtCore.QRect(90, 80, 461, 241))
        self.MessageBox.setObjectName("MessageBox")
        MainWindow.setCentralWidget(self.centralwidget)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.MessageBox.clicked.connect(self.show_popup)
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.MessageBox.setText(_translate("MainWindow", "ClickForMsgBox"))
    
    def show_popup(self):
        msg = QMessageBox()
        msg.setWindowTitle("Testing message box")
        msg.setText("This is the actual text!")
        # msg.setIcon(QMessageBox.Critical)
        msg.setIcon(QMessageBox.Information)
        # msg.setIcon(QMessageBox.Warning)
        # msg.setIcon(QMessageBox.Question)
        msg.setStandardButtons(QMessageBox.Ok|QMessageBox.Cancel|QMessageBox.Retry)
        msg.setDefaultButton(QMessageBox.Ok)
        msg.setInformativeText("This is a details of the question or information provided in one or two lines.")
        msg.setDetailedText("This is a detailed text")
        # we have four types of message boxes. 
        #warning
        #critical
        #information
        #questions
        msg.buttonClicked.connect(self.pop_up_button) # this function calls like which one we need to call
        
        x = msg.exec_()
    def pop_up_button(self,i):# this function actually prints which button we are clicking...
        print(i.text())
        

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())





# QMessageBox.Ok
# QMessageBox.Open
# QMessageBox.Save
# QMessageBox.Cancel
# QMessageBox.Close
# QMessageBox.Yes
# QMessageBox.No
# QMessageBox.Abort
# QMessageBox.Retry
# QMessageBox.Ignore